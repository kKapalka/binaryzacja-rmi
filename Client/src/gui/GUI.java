package gui;

import client.Client;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.rmi.RemoteException;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class GUI extends javax.swing.JFrame {

    private final Client client;
    final JFileChooser fc = new JFileChooser();
    BufferedImage loadedImg;
    BufferedImage binarizedImg;
    File file, file2;
    String binMode,Filename;
    int max_width=325;
    int max_height=350;
    public GUI() {
        initComponents();
        client = new Client(this);
        client.connectServer();
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        OperationsPanel = new javax.swing.JPanel();
        BinarizeButton = new javax.swing.JButton();
        LoadImageButton = new javax.swing.JButton();
        ThresholdLower = new javax.swing.JTextField();
        ModeCombo = new javax.swing.JComboBox<>();
        ImageLoadLabel = new javax.swing.JLabel();
        BinarizedImageLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ThresholdUpper = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Binarizer");
        setResizable(false);

        OperationsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Operacje"));

        BinarizeButton.setText("Binaryzacja");
        BinarizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BinarizeButtonActionPerformed(evt);
            }
        });

        LoadImageButton.setText("Załaduj obrazek");
        LoadImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadImageButtonActionPerformed(evt);
            }
        });

        ModeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dolnoprogowa", "Gornoprogowa", "Dwuprogowa", "Warunkowa" }));
        ModeCombo.setToolTipText("");
        ModeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModeComboActionPerformed(evt);
            }
        });

        ImageLoadLabel.setToolTipText("");

        jLabel1.setText("Próg dolny:");

        jLabel2.setText("Próg górny:");

        javax.swing.GroupLayout OperationsPanelLayout = new javax.swing.GroupLayout(OperationsPanel);
        OperationsPanel.setLayout(OperationsPanelLayout);
        OperationsPanelLayout.setHorizontalGroup(
            OperationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OperationsPanelLayout.createSequentialGroup()
                .addComponent(LoadImageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(ModeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(5, 5, 5)
                .addComponent(ThresholdLower, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ThresholdUpper, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BinarizeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(OperationsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ImageLoadLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BinarizedImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        OperationsPanelLayout.setVerticalGroup(
            OperationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OperationsPanelLayout.createSequentialGroup()
                .addGroup(OperationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BinarizeButton)
                    .addComponent(LoadImageButton)
                    .addComponent(ThresholdLower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ModeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(ThresholdUpper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(OperationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ImageLoadLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BinarizedImageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(OperationsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(OperationsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BinarizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BinarizeButtonActionPerformed
       int iThresholdLower,iThresholdUpper;
       if(binMode==null) binMode="Dolnoprogowa";
        try{
        iThresholdLower=Integer.parseInt(ThresholdLower.getText());
       } catch (NumberFormatException nfex){
           iThresholdLower=0;
       }
       try{
        iThresholdUpper=Integer.parseInt(ThresholdUpper.getText());
       } catch (NumberFormatException nfex){
           iThresholdUpper=0;
       }
       if(iThresholdLower<0) iThresholdLower=0;
       if(iThresholdLower>255) iThresholdLower=255;
       if(iThresholdUpper<0) iThresholdUpper=0;
       if(iThresholdUpper>255) iThresholdUpper=255;
       
       if(!checkVars()){
           JOptionPane.showMessageDialog(GUI.this,
                "Popraw wprowadzone zmienne.",
                "VAR_WARNING",
                JOptionPane.WARNING_MESSAGE);
       }else{
       try{
       
       Filename=client.getStub().binarize(binMode,iThresholdLower,iThresholdUpper);
       file2=new File(Filename);
       
           binarizedImg = rescale(ImageIO.read(file2));
            BinarizedImageLabel.setIcon(new ImageIcon(binarizedImg));
           
       }catch (RemoteException rex){
           JOptionPane.showMessageDialog(GUI.this,
                "Błąd połączenia.",
                "CONN_ERROR",
                JOptionPane.ERROR_MESSAGE);
           
       } catch(IOException ioex){
            JOptionPane.showMessageDialog(GUI.this,
                "Błąd Obsługi pliku.",
                "IO_ERROR",
                JOptionPane.ERROR_MESSAGE);
       } catch(NullPointerException npex){
            JOptionPane.showMessageDialog(GUI.this,
                "Błąd wskaźnika. Ścieżka do pliku:"+Filename,
                "NULL_PONTER_ERROR",
                JOptionPane.ERROR_MESSAGE);
       }
       }  
    }//GEN-LAST:event_BinarizeButtonActionPerformed
    
    private void ModeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModeComboActionPerformed

        binMode=(String)ModeCombo.getSelectedItem();
        
    // TODO add your handling code here:
    }//GEN-LAST:event_ModeComboActionPerformed

    private void LoadImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadImageButtonActionPerformed
        fc.setFileFilter(new JPEGImageFileFilter());
        int returnVal = fc.showOpenDialog(GUI.this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = fc.getSelectedFile();
            
            try{
            client.getStub().loadFile(file);
            loadedImg = rescale(ImageIO.read(file));
            ImageLoadLabel.setIcon(new ImageIcon(loadedImg));
            } catch (RemoteException rex){
                JOptionPane.showMessageDialog(GUI.this,
                "Błąd połączenia.",
                "CONN_ERROR",
                JOptionPane.ERROR_MESSAGE);
            }  catch (IOException ioex){
                JOptionPane.showMessageDialog(GUI.this,
                "Błąd odczytu.",
                "IO_ERROR",
                JOptionPane.ERROR_MESSAGE);
            }
        } 
    }//GEN-LAST:event_LoadImageButtonActionPerformed
    public BufferedImage rescale(BufferedImage image)
    {
        Dimension size=new Dimension(image.getWidth(),image.getHeight());
        int boundary=350;
        Dimension newsize=new Dimension(0,0);
        if(size.width>=size.height){
            newsize.width=boundary;
            newsize.height=(newsize.width*size.height)/size.width;
        }else{
            newsize.height=boundary;
            newsize.width=(newsize.height*size.width)/size.height;
        }
        BufferedImage resizedImage = new BufferedImage(newsize.width, newsize.height, BufferedImage.TYPE_INT_RGB);
        Graphics2D g = resizedImage.createGraphics();
        g.drawImage(image, 0, 0, newsize.width, newsize.height, null);
        g.dispose();
        return resizedImage;
    }
    
    private boolean checkVars() {
        return((!ThresholdLower.getText().isEmpty() && "Dolnoprogowa".equals(binMode))||
                (!ThresholdUpper.getText().isEmpty() && "Gornoprogowa".equals(binMode))||
                (!ThresholdLower.getText().isEmpty()&&!ThresholdUpper.getText().isEmpty()&&
                ("Dwuprogowa".equals(binMode)||"Warunkowa".equals(binMode)) &&
                Integer.parseInt(ThresholdUpper.getText())>Integer.parseInt(ThresholdLower.getText()))); 

    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new GUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BinarizeButton;
    private javax.swing.JLabel BinarizedImageLabel;
    private javax.swing.JLabel ImageLoadLabel;
    private javax.swing.JButton LoadImageButton;
    private javax.swing.JComboBox<String> ModeCombo;
    private javax.swing.JPanel OperationsPanel;
    private javax.swing.JTextField ThresholdLower;
    private javax.swing.JTextField ThresholdUpper;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}

 
